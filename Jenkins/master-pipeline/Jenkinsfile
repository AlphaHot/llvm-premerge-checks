// Copyright 2019 Google LLC
//
// Licensed under the the Apache License v2.0 with LLVM Exceptions (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://llvm.org/LICENSE.txt
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

pipeline {
    agent any
    triggers {
        pollSCM 'H H/2 * * *'
    }
    environment {
        BUILD_ID='${JOB_BASE_NAME}-${BUILD_NUMBER}'
        TARGET_DIR='/mnt/nfs/results/${BUILD_ID}'
    }
    stages {
        stage("git checkout"){
            steps {
                git url: 'https://github.com/llvm/llvm-project.git'
                sh 'git clean -fdx'
                sh 'mkdir -p llvm-premerge-checks'
                dir("llvm-premerge-checks")
                {
                    git url: 'https://github.com/google/llvm-premerge-checks.git'
                }
            }            
        }
        stage('CMake') {
            steps {
                sh 'llvm-premerge-checks/scripts/run_cmake.sh'
            }
        }
        stage('ninja all') {
            steps {
                sh 'llvm-premerge-checks/scripts/run_ninja.sh all'
            }
        }
        stage('ninja check') {
            steps {
                sh 'llvm-premerge-checks/scripts/run_ninja.sh check'
            }
        }
        stage('ninja check-all') {
            steps {
                sh 'llvm-premerge-checks/scripts/run_ninja.sh check-all'
            }
        }
    }
    post { 
        always { 
            echo 'Postprocessing...'
            // log console log to file
            script {
                def logContent = Jenkins.getInstance()
                    .getItemByFullName(env.JOB_NAME)
                    .getBuildByNumber(
                        Integer.parseInt(env.BUILD_NUMBER))
                    .logFile.text
                writeFile file: "console-log.txt", text: logContent
            }
            sh 'cp console-log.txt ${env.TARGET_DIR}'
            echo 'Console log is available at https://results.new.llvm-mgerge-guards/${env.BUILD_ID}'
        }
    }
}